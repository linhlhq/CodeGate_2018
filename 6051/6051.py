key = [0x16,0xC5,0x68,0x16,0x6F,0xC6,0x16,0x6F,0x6A,0x16,0xD7,0x73,0x16,0x67,0x52,0xFF,
0x16,0x7B,0x4B,0x16,0x6F,0xEC,0x16,0xF2,0x2A,0xCD,0xBA,0xAC,0xF2,0xFC,0x16,0x7B,
0xE3,0x47,0x7C,0xC3,0x55,0x16,0xF2,0xF8,0x1C,0x16,0x6F,0xE8,0xE8,0x8D,0x76,0x5B,
0x2E,0x64,0x33,0xA0,0xCA,0x9A,0x16,0x6F,0x67,0x32,0x16,0x6B,0x0E,0x16,0x7B,0xB7,
0x32,0x58,0xA4,0x5A,0x25,0x16,0x7B,0x5E,0x05,0x18,0x58,0xE9,0x16,0x7B,0x5F,0x16,
0x01,0xD4,0xAC,0xB2,0xCE,0xC7,0x16,0x67,0x9B,0xB5,0x16,0xF2,0x54,0x12,0x0F,0x82,
0x74,0x16,0x6B,0x42,0x16,0xF0,0x21,0x3E,0x16,0x6F,0xDC,0x88,0x71,0xE9,0x3F,0xA1,
0x42,0x16,0xF2,0xE1,0x16,0xF2,0xFD,0x16,0x7B,0x67,0x16,0x76,0x3F,0x16,0xF2,0x01,
0x16,0xAB,0x7F,0x97,0x16,0x7D,0xEB,0xDC,0x6B,0x97,0x8F,0x38,0x5D,0x2A,0x16,0x6B,
0xED,0x16,0x7B,0xB0,0x3C,0xFB,0x16,0x7B,0x33,0xAF,0x3C,0x55,0xED,0x18,0xDB,0x5D,
0x02,0x1B,0xFF,0x43,0x16,0xF2,0xFC,0xFA,0xAB,0x3A,0x16,0x7B,0xFC,0x29,0x16,0xC5,
0xD2,0xE6,0x05,0x3D,0x7C,0x94,0x16,0x82,0x76,0x16,0xFE,0xD8,0xBF,0x61,0x89,0xFA,
0x16,0x82,0x5C,0x16,0x7B,0xBC,0xA8,0x9A,0x10,0x95,0x16,0xF2,0xB2,0xEB,0xF1,0xB4,
0x06,0xEF,0xF8,0x00,0x16,0x7B,0xEA,0xA1,0x3A,0xE6,0xCA,0x16,0x7B,0x0C,0xCB,0xD0,
0x49,0x47,0x64,0x16,0x7B,0xBE,0x1F,0x24,0x1E,0xA9,0x1C,0x16,0x6B,0x7C,0x64,0xC6,
0x16,0x67,0x14,0x74,0x16,0x6B,0x5A,0xC6,0x16,0x7B,0x5E,0x4C,0x7A,0x16,0x7B,0x63,
0x3C,0x71,0x16,0x7B,0x64,0x25,0x12,0x9E,0x16,0x7B,0x0A,0xDC,0x16,0xF2,0xAB,0x16,
0xC5,0xD4]

base = [0x63,0x7C,0x77,0x7B,0xF2,0x6B,0x6F,0xC5,0x30,0x01,0x67,0x2B,0xFE,0xD7,0xAB,0x76,
0xCA,0x82,0xC9,0x7D,0xFA,0x59,0x47,0xF0,0xAD,0xD4,0xA2,0xAF,0x9C,0xA4,0x72,0xC0,
0xB7,0xFD,0x93,0x26,0x36,0x3F,0xF7,0xCC,0x34,0xA5,0xE5,0xF1,0x71,0xD8,0x31,0x15,
0x04,0xC7,0x23,0xC3,0x18,0x96,0x05,0x9A,0x07,0x12,0x80,0xE2,0xEB,0x27,0xB2,0x75,
0x09,0x83,0x2C,0x1A,0x1B,0x6E,0x5A,0xA0,0x52,0x3B,0xD6,0xB3,0x29,0xE3,0x2F,0x84,
0x53,0xD1,0x00,0xED,0x20,0xFC,0xB1,0x5B,0x6A,0xCB,0xBE,0x39,0x4A,0x4C,0x58,0xCF,
0xD0,0xEF,0xAA,0xFB,0x43,0x4D,0x33,0x85,0x45,0xF9,0x02,0x7F,0x50,0x3C,0x9F,0xA8,
0x51,0xA3,0x40,0x8F,0x92,0x9D,0x38,0xF5,0xBC,0xB6,0xDA,0x21,0x10,0xFF,0xF3,0xD2,
0xCD,0x0C,0x13,0xEC,0x5F,0x97,0x44,0x17,0xC4,0xA7,0x7E,0x3D,0x64,0x5D,0x19,0x73,
0x60,0x81,0x4F,0xDC,0x22,0x2A,0x90,0x88,0x46,0xEE,0xB8,0x14,0xDE,0x5E,0x0B,0xDB,
0xE0,0x32,0x3A,0x0A,0x49,0x06,0x24,0x5C,0xC2,0xD3,0xAC,0x62,0x91,0x95,0xE4,0x79,
0xE7,0xC8,0x37,0x6D,0x8D,0xD5,0x4E,0xA9,0x6C,0x56,0xF4,0xEA,0x65,0x7A,0xAE,0x08,
0xBA,0x78,0x25,0x2E,0x1C,0xA6,0xB4,0xC6,0xE8,0xDD,0x74,0x1F,0x4B,0xBD,0x8B,0x8A,
0x70,0x3E,0xB5,0x66,0x48,0x03,0xF6,0x0E,0x61,0x35,0x57,0xB9,0x86,0xC1,0x1D,0x9E,
0xE1,0xF8,0x98,0x11,0x69,0xD9,0x8E,0x94,0x9B,0x1E,0x87,0xE9,0xCE,0x55,0x28,0xDF,
0x8C,0xA1,0x89,0x0D,0xBF,0xE6,0x42,0x68,0x41,0x99,0x2D,0x0F,0xB0,0x54,0xBB,0x16]

rand = [0x67, 0xc6, 0x69, 0x73, 0x51, 0xff, 0x4a, 0xec, 0x29, 0xcd, 0xba, 0xab,
0xf2, 0xfb, 0xe3, 0x46, 0x7c, 0xc2, 0x54, 0xf8, 0x1b, 0xe8, 0xe7, 0x8d, 0x76,
0x5a, 0x2e, 0x63, 0x33, 0x9f, 0xc9, 0x9a, 0x66, 0x32, 0x0d, 0xb7, 0x31, 0x58,
0xa3, 0x5a, 0x25, 0x5d, 0x05, 0x17, 0x58, 0xe9, 0x5e, 0xd4, 0xab, 0xb2, 0xcd,
0xc6, 0x9b, 0xb4, 0x54, 0x11, 0x0e, 0x82, 0x74, 0x41, 0x21, 0x3d, 0xdc, 0x87,
0x70, 0xe9, 0x3e, 0xa1, 0x41, 0xe1, 0xfc, 0x67, 0x3e, 0x01, 0x7e, 0x97, 0xea,
0xdc, 0x6b, 0x96, 0x8f, 0x38, 0x5c, 0x2a, 0xec, 0xb0, 0x3b, 0xfb, 0x32, 0xaf,
0x3c, 0x54, 0xec, 0x18, 0xdb, 0x5c, 0x02, 0x1a, 0xfe, 0x43, 0xfb, 0xfa, 0xaa,
0x3a, 0xfb, 0x29, 0xd1, 0xe6, 0x05, 0x3c, 0x7c, 0x94, 0x75, 0xd8, 0xbe, 0x61,
0x89, 0xf9, 0x5c, 0xbb, 0xa8, 0x99, 0x0f, 0x95, 0xb1, 0xeb, 0xf1, 0xb3, 0x05,
0xef, 0xf7, 0x00, 0xe9, 0xa1, 0x3a, 0xe5, 0xca, 0x0b, 0xcb, 0xd0, 0x48, 0x47,
0x64, 0xbd, 0x1f, 0x23, 0x1e, 0xa8, 0x1c, 0x7b, 0x64, 0xc5, 0x14, 0x73, 0x5a,
0xc5, 0x5e, 0x4b, 0x79, 0x63, 0x3b, 0x70, 0x64, 0x24, 0x11, 0x9e, 0x09, 0xdc,
0xaa, 0xd4, 0xac, 0xf2, 0x1b, 0x10, 0xaf, 0x3b, 0x33, 0xcd, 0xe3, 0x50, 0x48,
0x47, 0x15, 0x5c, 0xbb, 0x6f, 0x22, 0x19, 0xba, 0x9b, 0x7d, 0xf5, 0x0b, 0xe1,
0x1a, 0x1c, 0x7f, 0x23, 0xf8, 0x29, 0xf8, 0xa4, 0x1b, 0x13, 0xb5, 0xca, 0x4e,
0xe8, 0x98, 0x32, 0x38, 0xe0, 0x79, 0x4d, 0x3d, 0x34, 0xbc, 0x5f, 0x4e, 0x77,
0xfa, 0xcb, 0x6c, 0x05, 0xac, 0x86, 0x21, 0x2b, 0xaa, 0x1a, 0x55, 0xa2, 0xbe,
0x70, 0xb5, 0x73, 0x3b, 0x04, 0x5c, 0xd3, 0x36, 0x94, 0xb3, 0xaf, 0xe2, 0xf0,
0xe4, 0x9e, 0x4f, 0x32, 0x15, 0x49, 0xfd, 0x82, 0x4e, 0xa9, 0x08, 0x70, 0xd4,
0xb2, 0x8a, 0x29, 0x54, 0x48, 0x9a, 0x0a, 0xbc, 0xd5, 0x0e, 0x18, 0xa8, 0x44,
0xac, 0x5b]
import sys
def find(a):
	for i in range(len(base)):
		if a == base[i]:
			return i
	return -1

def cmpList(a, b):
	for i in xrange(len(a)):
		if a[i] != b[i]:
			return 0;
	return 1

res = [];
#print res
index_ran = 0;
i = 0

while i < len(key):
	if rand[index_ran]-48+48==key[i]:
		res.append('0')
		i = i + 1
	elif rand[index_ran]-48+49==key[i]:
		res.append('1')
		i = i + 1
	elif key[i] == 22:
		index = find(key[i+1])
		if index == -1:
			sys.exit(1)
		if rand[index_ran]-48+48==key[i+2]:
			ok = 0
		elif rand[index_ran]-48+49==key[i+2]:
			ok = 1
		for j in range(index):
			if ok == 1:
				res.append('1')
			else:
				res.append('0')
		i = i+3
	index_ran = index_ran+1

d=0
print len(res)
for i in range(len(res)):
	if res[i] == '0':
		d=d+1
tmp = [];

print d
a = '0'
for i in range(len(res)):
	x = []
	if i >= d:
		a = '1'
	x.append(a)
	for j in range(len(res)-2):
		x.append('?')
	x.append(res[i])
	x.append(a)
	for j in range(len(res)):
		x.append('?')
	tmp.append(x)

#revese

for i in xrange(len(tmp)):
	mask =list('0'*len(tmp))
	#round i
	for j in xrange(len(tmp)):
		b = tmp[j][:i+1]

		#find last
		for r in xrange(len(tmp)):
			if cmpList(b,tmp[r][len(tmp)-1:len(tmp)+i]) == 1 and mask[r] == '0':
				mask[r] = '1'
				tmp[j][i+1] = tmp[r][len(tmp)+i]
				tmp[j][len(tmp)+i+1] = tmp[j][i+1]
				break

for i in xrange(len(tmp)):
	result = []
	for j in xrange(len(tmp)/8):
		result.append(chr(int(''.join(tmp[i][j*8:(j+1)*8]),2)))
	print ''.join(result)